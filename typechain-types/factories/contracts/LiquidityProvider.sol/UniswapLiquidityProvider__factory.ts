/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapLiquidityProvider,
  UniswapLiquidityProviderInterface,
} from "../../../contracts/LiquidityProvider.sol/UniswapLiquidityProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETHDesired",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setAuthorizedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109a53803806109a583398101604081905261002f9161008b565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692811692909217905560038054909116331790556100be565b80516001600160a01b038116811461008657600080fd5b919050565b6000806040838503121561009e57600080fd5b6100a78361006f565b91506100b56020840161006f565b90509250929050565b6108d8806100cd6000396000f3fe6080604052600436106100695760003560e01c80639cd441da116100435780639cd441da146100cc578063bb2f7199146100ec578063e086e5ec1461010157600080fd5b806349df728c1461007557806369f29c51146100975780636b54acd9146100b757600080fd5b3661007057005b600080fd5b34801561008157600080fd5b506100956100903660046107a7565b610116565b005b3480156100a357600080fd5b506100956100b23660046107a7565b610284565b3480156100c357600080fd5b5061009561030e565b3480156100d857600080fd5b506100956100e73660046107d7565b610428565b3480156100f857600080fd5b50610095610645565b34801561010d57600080fd5b50610095610724565b6003546001600160a01b0316331461016b5760405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697a65642061636365737360681b60448201526064015b60405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156101cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f191906107f9565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290529091506001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e9190610812565b50505050565b6003546001600160a01b031633146102d45760405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697a65642061636365737360681b6044820152606401610162565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6003546001600160a01b0316331461035e5760405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697a65642061636365737360681b6044820152606401610162565b600154600160a01b900460ff166103b75760405162461bcd60e51b815260206004820152601460248201527f4c6971756964697479206e6f74206c6f636b65640000000000000000000000006044820152606401610162565b60025442116104085760405162461bcd60e51b815260206004820152601660248201527f4c6971756964697479207374696c6c206c6f636b6564000000000000000000006044820152606401610162565b6001805474ff000000000000000000000000000000000000000019169055565b6003546001600160a01b031633146104785760405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697a65642061636365737360681b6044820152606401610162565b6000546001600160a01b0316806104d15760405162461bcd60e51b815260206004820152601860248201527f556e697377617020726f75746572206e6f7420666f756e6400000000000000006044820152606401610162565b6001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018690529091169063095ea7b3906044016020604051808303816000875af115801561053d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105619190610812565b506001546001600160a01b038083169163f305d71991859116866000803061058b42610708610834565b60405160e089901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c40160606040518083038185885af1158015610610573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106359190610874565b505050610640610645565b505050565b6003546001600160a01b031633146106955760405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697a65642061636365737360681b6044820152606401610162565b600154600160a01b900460ff16156106ef5760405162461bcd60e51b815260206004820152601860248201527f4c697175696469747920616c7265616479206c6f636b656400000000000000006044820152606401610162565b6001805474ff00000000000000000000000000000000000000001916600160a01b17905561071f42610708610834565b600255565b6003546001600160a01b031633146107745760405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697a65642061636365737360681b6044820152606401610162565b6040514790339082156108fc029083906000818181858888f193505050501580156107a3573d6000803e3d6000fd5b5050565b6000602082840312156107b957600080fd5b81356001600160a01b03811681146107d057600080fd5b9392505050565b600080604083850312156107ea57600080fd5b50508035926020909101359150565b60006020828403121561080b57600080fd5b5051919050565b60006020828403121561082457600080fd5b815180151581146107d057600080fd5b8082018082111561086e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60008060006060848603121561088957600080fd5b835192506020840151915060408401519050925092509256fea264697066735822122000d11002d88833c07f7b97da4ac9b717b443a12c42f65ca8bc0238adcddc75f764736f6c63430008110033";

type UniswapLiquidityProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapLiquidityProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapLiquidityProvider__factory extends ContractFactory {
  constructor(...args: UniswapLiquidityProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _uniswapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapLiquidityProvider> {
    return super.deploy(
      _token,
      _uniswapRouter,
      overrides || {}
    ) as Promise<UniswapLiquidityProvider>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _uniswapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _uniswapRouter, overrides || {});
  }
  override attach(address: string): UniswapLiquidityProvider {
    return super.attach(address) as UniswapLiquidityProvider;
  }
  override connect(signer: Signer): UniswapLiquidityProvider__factory {
    return super.connect(signer) as UniswapLiquidityProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapLiquidityProviderInterface {
    return new utils.Interface(_abi) as UniswapLiquidityProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapLiquidityProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapLiquidityProvider;
  }
}
