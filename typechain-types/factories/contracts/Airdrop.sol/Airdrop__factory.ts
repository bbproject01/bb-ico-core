/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Airdrop,
  AirdropInterface,
} from "../../../contracts/Airdrop.sol/Airdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_whitelist",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161079838038061079883398101604081905261002f91610106565b60005b825181101561009757600160026000858481518110610053576100536101dc565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061008f816101f2565b915050610032565b50600080546001600160a01b0319166001600160a01b039290921691909117905550600380546001600160a81b0319166101003302179055610219565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b038116811461010157600080fd5b919050565b6000806040838503121561011957600080fd5b82516001600160401b038082111561013057600080fd5b818501915085601f83011261014457600080fd5b8151602082821115610158576101586100d4565b8160051b604051601f19603f8301168101818110868211171561017d5761017d6100d4565b60405292835281830193508481018201928984111561019b57600080fd5b948201945b838610156101c0576101b1866100ea565b855294820194938201936101a0565b96506101cf90508782016100ea565b9450505050509250929050565b634e487b7160e01b600052603260045260246000fd5b60006001820161021257634e487b7160e01b600052601160045260246000fd5b5060010190565b610570806102286000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638456cb59116100765780639b19251a1161005b5780639b19251a1461012c578063c884ef831461014f578063fc0c546a1461017257600080fd5b80638456cb59146100f45780638da5cb5b146100fc57600080fd5b8063091d2788146100a85780633f4ba83a146100c55780634e71d92d146100cf5780635c975abb146100d7575b600080fd5b6100b2620493e081565b6040519081526020015b60405180910390f35b6100cd610185565b005b6100cd610204565b6003546100e49060ff1681565b60405190151581526020016100bc565b6100cd61046b565b6003546101149061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016100bc565b6100e461013a3660046104e8565b60026020526000908152604090205460ff1681565b6100e461015d3660046104e8565b60016020526000908152604090205460ff1681565b600054610114906001600160a01b031681565b60035461010090046001600160a01b031633146101f85760405162461bcd60e51b815260206004820152602660248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526531ba34b7b71760d11b60648201526084015b60405180910390fd5b6003805460ff19169055565b3360009081526002602052604090205460ff166102895760405162461bcd60e51b815260206004820152602d60248201527f596f7520617265206e6f7420617574686f72697a656420746f2063616c6c207460448201527f6869732066756e6374696f6e2e0000000000000000000000000000000000000060648201526084016101ef565b620493e05a81146102dc5760405162461bcd60e51b815260206004820152601260248201527f496e76616c696420676173206c696d69742e000000000000000000000000000060448201526064016101ef565b60035460ff161561032f5760405162461bcd60e51b815260206004820152601760248201527f54686520636f6e7472616374206973207061757365642e00000000000000000060448201526064016101ef565b3360009081526001602052604090205460ff16156103b55760405162461bcd60e51b815260206004820152602560248201527f596f75206861766520616c726561647920636c61696d6564207468652061697260448201527f64726f702e00000000000000000000000000000000000000000000000000000060648201526084016101ef565b336000818152600160208190526040808320805460ff1916909217909155905490517fa9059cbb000000000000000000000000000000000000000000000000000000008152600481019290925268056bc75e2d6310000060248301526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104679190610518565b5050565b60035461010090046001600160a01b031633146104d95760405162461bcd60e51b815260206004820152602660248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526531ba34b7b71760d11b60648201526084016101ef565b6003805460ff19166001179055565b6000602082840312156104fa57600080fd5b81356001600160a01b038116811461051157600080fd5b9392505050565b60006020828403121561052a57600080fd5b8151801515811461051157600080fdfea2646970667358221220b377035736d049fef4ff824a10c8a4c494d525bbb3c3fd735eae5857a94d0c8364736f6c63430008110033";

type AirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Airdrop__factory extends ContractFactory {
  constructor(...args: AirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _whitelist: PromiseOrValue<string>[],
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Airdrop> {
    return super.deploy(
      _whitelist,
      _token,
      overrides || {}
    ) as Promise<Airdrop>;
  }
  override getDeployTransaction(
    _whitelist: PromiseOrValue<string>[],
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_whitelist, _token, overrides || {});
  }
  override attach(address: string): Airdrop {
    return super.attach(address) as Airdrop;
  }
  override connect(signer: Signer): Airdrop__factory {
    return super.connect(signer) as Airdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropInterface {
    return new utils.Interface(_abi) as AirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Airdrop {
    return new Contract(address, _abi, signerOrProvider) as Airdrop;
  }
}
